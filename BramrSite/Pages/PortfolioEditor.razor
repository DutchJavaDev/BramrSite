@page "/portfolio"
@using BramrSite.Classes
@using BramrSite.Models
@using BramrSite.Pages.Components
@attribute [Authorize]

<div class="main-body">
    @*<div class="afbeeldinggrid">
        <header class="afbeeldinggrid-titel">
            Afbeelding opmaak>
            <a href="#" class="kleurgrid-sluit">&times;</a>
        </header>
        <div class="gridceptionafbeelding">
            <div id="afbeeldingkiezen">
                <label for="afbeeldingkiezen">Kies een foto:</label>
                <ImageUpload CurrentImage="@CurrentImageElement" />
            </div>
            <div id="hyperlinktext">
                <input type="text" placeholder="Type some text..." @oninput="async (e) => { CurrentTextElement.Text = e.Value.ToString(); await AddToDB(ChangeModel.Type.Text, e.Value.ToString()); }" @bind-value="CurrentTextElement.Text" />
            </div>
            <div id="grootebtn">
                <button class="buttonGroote" disabled="@UndoButton" @onclick="async() => { await Undo(); }"><i class="fas fa-border-all"></i></button>
            </div>
            <div id="opvullingbtn">
                <button class="buttonOpvulling" disabled="@RedoButton" @onclick="async() => { await Redo(); }"><i class="fas fa-paint-brush"></i></button>
            </div>
            <div id="alphabtn">
                <button class="buttonAlpha"><i class="far fa-sun"></i></button>
            </div>
            <div id="borderbtn">
                <button class="buttonBorder"><i class="fas fa-border-none"></i></button>
            </div>
            <div id="borderradiusbtn">
                <button class="buttonRadius"><i class="far fa-circle"></i></button>
            </div>
        </div>
    </div>
    <div class="lettertypegrid">
        <header class="lettertypegrid-titel">Text opmaak</header>
        <div class="gridceptionlettertype">
            <div id="fontkiezen">
                <label for="font">Fonts</label>
                <select name="font" id="fontkiezen">
                    <option value="font1">Font1</option>
                    <option value="font2">Font2</option>
                    <option value="font3">Font3</option>
                    <option value="font4">Font4</option>
                    <option value="font5">Font5</option>
                    <option value="font6">Font6</option>
                    <option value="font7">Font7</option>
                    <option value="font8">Font8</option>
                    <option value="font9">Font9</option>
                    <option value="font10">Font10</option>
                </select>
            </div>
            <div id="fontgroote">
                <div class="slideFontgroote">
                    <p>Font groote</p>
                    <input type="range" min="1" max="100" value="50" class="slider" id="myRange">
                </div>
            </div>
            <div id="fontweight">
                <div class="slideFontweight">
                    <p>Font weight</p>
                    <input type="range" min="1" max="100" value="50" class="slider" id="myRange">
                </div>
            </div>
            <div id="boldbtn">
                <button class="buttonBold" @onclick="async() => { CurrentTextElement.Bold = !CurrentTextElement.Bold; await AddToDB(ChangeModel.Type.Bold, CurrentTextElement.Bold.ToString()); }"><i class="fas fa-bold"></i></button>
            </div>
            <div id="italicbtn">
                <button class="buttonItalic" @onclick="async() => { CurrentTextElement.Italic = !CurrentTextElement.Italic; await AddToDB(ChangeModel.Type.Italic, CurrentTextElement.Italic.ToString()); }"><i class="fas fa-italic"></i></button>
            </div>
            <div id="streeponderbtn">
                <button class="buttonStreepOnder" @onclick="async() => { CurrentTextElement.Underlined = !CurrentTextElement.Underlined; await AddToDB(ChangeModel.Type.Underlined, CurrentTextElement.Underlined.ToString()); }"><i class="fas fa-underline"></i></button>
            </div>
            <div id="streepbovenbtn">
                <button class="buttonStreepBoven" @onclick="async() => { CurrentTextElement.StrikedThrough = !CurrentTextElement.StrikedThrough; await AddToDB(ChangeModel.Type.Strikedthrough, CurrentTextElement.StrikedThrough.ToString()); }"><i class="fas fa-strikethrough"></i></button>
            </div>
            <div id="textshadowbtn">
                <button class="buttonTextShadow"><i class="fas fa-moon"></i></button>
            </div>
            <div id="alinglinksbtn">
                <button class="buttonAlingLinks" @onclick="async() => { CurrentTextElement.TextAllignment = TextModel.Allignment.Left; await AddToDB(ChangeModel.Type.TextAllignment, CurrentTextElement.TextAllignment.ToString()); }"><i class="fas fa-align-left"></i></button>
            </div>
            <div id="alingmiddenbtn">
                <button class="buttonAlingMidden" @onclick="async() => { CurrentTextElement.TextAllignment = TextModel.Allignment.Center; await AddToDB(ChangeModel.Type.TextAllignment, CurrentTextElement.TextAllignment.ToString()); }"><i class="fas fa-align-center"></i></button>
            </div>
            <div id="alingrechtsbtn">
                <button class="buttonAlingRechts" @onclick="async() => { CurrentTextElement.TextAllignment = TextModel.Allignment.Right; await AddToDB(ChangeModel.Type.TextAllignment, CurrentTextElement.TextAllignment.ToString()); }"><i class="fas fa-align-right"></i></button>
            </div>
        </div>
    </div>
    <div class="kleurgrid" id="kleurgrid-modal">
        <header class="kleurgrid-titel">
            Colorpicker>
            <a href="#" class="kleurgrid-sluit">&times;</a>
        </header>
        <div class="gridceptionkleur">
            <div id="textkleurkiezen">
                <label for="textkleurkiezen"> Kleur font</label>
                <input name="Color Picker" type="color" @oninput="(e) => { CurrentTextElement.TextColor = e.Value.ToString(); }" @onchange="async(e) => { CurrentTextElement.TextColor = e.Value.ToString(); await AddToDB(ChangeModel.Type.TextColor, e.Value.ToString()); e.Value = CurrentTextElement.TextColor; }" />
            </div>
            <div id="backgroundtext">
                <label for="backgroundtext"> Kleur achtergrond</label>
                <input name="Color Picker" type="color" @oninput="(e) => { CurrentTextElement.BackgroundColor = e.Value.ToString(); }" @onchange="async(e) => { CurrentTextElement.BackgroundColor = e.Value.ToString(); await AddToDB(ChangeModel.Type.BackgroundColor, e.Value.ToString()); e.Value = CurrentTextElement.BackgroundColor; }" />
            </div>
        </div>
    </div>*@

    <header>
        <div class="menu-toggler">
            <div class="bar half start">
            </div>
            <div class="bar">
            </div>
            <div class="bar half end">
            </div>
        </div>
        <nav class="top-nav">
            <div>
                <ul class="nav-list">
                    <li> <a href=home class="nav-link">Home</a> </li>
                    <li> <a href=home class="nav-link">About</a> </li>
                    <li> <a href=home class="nav-link">Services</a> </li>
                    <li> <a href=portfolio class="nav-link">Portfolio</a> </li>
                    <li> <a href=home class="nav-link">Experience</a> </li>
                    <li> <a href=home class="nav-link">Contact</a> </li>
                </ul>
            </div>
        </nav>
        <div class="landing-text">
            <TextComponent CurrentDesignElement="AllTextElements[0]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="0" />
            <TextComponent CurrentDesignElement="AllTextElements[1]" TagType="h6" PortfolioCallback="SelectionCallBack" Index="1" />
        </div>
    </header>

    <section class="about" id="about">
        <div class="container">
            <div class="profile-img" data-aos="fade-right" data-aos-delay="300">
                <ImageComponent CurrentDesignElement="AllImageElements[0]" CallBack="SelectionCallBack" Index="0" />
            </div>
            <div class="about-details" data-aos="fade-left" data-aos-delay="600">
                <div class="about-heading">
                    <h1>About</h1>
                    <h6>Myself</h6>
                </div>
                <TextComponent CurrentDesignElement="AllTextElements[2]" TagType="p" PortfolioCallback="SelectionCallBack" Index="2" />
                <div class="social-media">
                    <ul class="nav-list">
                        <li>
                            <a href="#" class="icon-link">
                                <i class="fab fa-facebook-square"></i>
                            </a>
                        </li>
                        <li>
                            <a href="#" class="icon-link">
                                <i class="fab fa-twitter-square"></i>
                            </a>
                        </li>
                        <li>
                            <a href="#" class="icon-link">
                                <i class="fab fa-instagram-square"></i>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <section class="services" id="services">
        <div class="container">
            <div class="section-heading">
                <h1>Services</h1>
                <h6> My skillset </h6>
            </div>
            <div class="my-skills">
                <div class="skill" data-aos="fade-in" data-aos-delay="300">
                    <div class="icon-container">
                        <i class="fas fa-layer-group"></i>
                    </div>
                    <TextComponent CurrentDesignElement="AllTextElements[3]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="3" />
                    <TextComponent CurrentDesignElement="AllTextElements[4]" TagType="p" PortfolioCallback="SelectionCallBack" Index="4" />
                </div>
                <div class="skill" data-aos="fade-in" data-aos-delay="600">
                    <div class="icon-container">
                        <i class="fas fa-code"></i>
                    </div>
                    <TextComponent CurrentDesignElement="AllTextElements[5]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="5" />
                    <TextComponent CurrentDesignElement="AllTextElements[6]" TagType="p" PortfolioCallback="SelectionCallBack" Index="6" />
                </div>
                <div class="skill" data-aos="fade-in" data-aos-delay="900">
                    <div class="icon-container">
                        <i class="fas fa-chart-bar"></i>
                    </div>
                    <TextComponent CurrentDesignElement="AllTextElements[7]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="7" />
                    <TextComponent CurrentDesignElement="AllTextElements[8]" TagType="p" PortfolioCallback="SelectionCallBack" Index="8" />
                </div>
            </div>
        </div>
    </section>

    <section class="portfolio" id="portfolio">
        <div class="container">
            <div class="section-heading">
                <h1>Portfolio</h1>
                <h6> Some of my recent work </h6>
            </div>
            <div class="portfolio-item">
                <div class="portfolio-img has-margin-right" data-aos="fade-right" data-aos-delay="300">
                    <ImageComponent CurrentDesignElement="AllImageElements[1]" CallBack="SelectionCallBack" Index="1" />
                </div>
                <div class="portfolio-description" data-aos="fade-left" data-aos-delay="600">
                    <TextComponent CurrentDesignElement="AllTextElements[9]" TagType="h6" PortfolioCallback="SelectionCallBack" Index="9" />
                    <TextComponent CurrentDesignElement="AllTextElements[10]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="10" />
                    <TextComponent CurrentDesignElement="AllTextElements[11]" TagType="p" PortfolioCallback="SelectionCallBack" Index="11" />
                    <a href="#" class="cta">View details</a>
                </div>
            </div>
            <div class="portfolio-item">
                <div class="portfolio-description has-margin-right" data-aos="fade-right" data-aos-delay="900">
                    <TextComponent CurrentDesignElement="AllTextElements[12]" TagType="h6" PortfolioCallback="SelectionCallBack" Index="12" />
                    <TextComponent CurrentDesignElement="AllTextElements[13]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="13" />
                    <TextComponent CurrentDesignElement="AllTextElements[14]" TagType="p" PortfolioCallback="SelectionCallBack" Index="14" />
                    <a href="#" class="cta">View details</a>
                </div>
                <div class="portfolio-img" data-aos="fade-left" data-aos-delay="1200">
                    <ImageComponent CurrentDesignElement="AllImageElements[2]" CallBack="SelectionCallBack" Index="2" />
                </div>
            </div>
            <div class="portfolio-item">
                <div class="portfolio-img has-margin-right" data-aos="fade-right" data-aos-delay="1500">
                    <ImageComponent CurrentDesignElement="AllImageElements[3]" CallBack="SelectionCallBack" Index="3" />
                </div>
                <div class="portfolio-description" data-aos="fade-left" data-aos-delay="1800">
                    <TextComponent CurrentDesignElement="AllTextElements[15]" TagType="h6" PortfolioCallback="SelectionCallBack" Index="15" />
                    <TextComponent CurrentDesignElement="AllTextElements[16]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="16" />
                    <TextComponent CurrentDesignElement="AllTextElements[17]" TagType="p" PortfolioCallback="SelectionCallBack" Index="17" />
                    <a href="#" class="cta">View details</a>
                </div>
            </div>
        </div>
    </section>

    <section class="experience" id="experience">
        <div class="container">
            <div class="section-heading">
                <h1>Work experience</h1>
                <h6> My past and current jobs </h6>
            </div>
            <div class="timeline" data-aos="fade-down" data-aos-delay="300">
                <ul>
                    <li class="date" data-date="@(AllTextElements[18].Text == "Insert job 1" || AllTextElements[18].Text == string.Empty ? "job-1" : AllTextElements[18].Text)">
                        <TextComponent CurrentDesignElement="AllTextElements[18]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="18" />
                        <TextComponent CurrentDesignElement="AllTextElements[19]" TagType="p" PortfolioCallback="SelectionCallBack" Index="19" />
                    </li>
                    <li class="date" data-date="@(AllTextElements[20].Text == "Insert job 2" || AllTextElements[20].Text == string.Empty ? "job-2" : AllTextElements[20].Text)">
                        <TextComponent CurrentDesignElement="AllTextElements[20]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="20" />
                        <TextComponent CurrentDesignElement="AllTextElements[21]" TagType="p" PortfolioCallback="SelectionCallBack" Index="21" />
                    </li>
                    <li class="date" data-date="@(AllTextElements[22].Text == "Insert job 3" || AllTextElements[22].Text == string.Empty ? "job-3" : AllTextElements[22].Text)">
                        <TextComponent CurrentDesignElement="AllTextElements[22]" TagType="h1" PortfolioCallback="SelectionCallBack" Index="22" />
                        <TextComponent CurrentDesignElement="AllTextElements[23]" TagType="p" PortfolioCallback="SelectionCallBack" Index="23" />
                    </li>
                </ul>
            </div>
        </div>
    </section>

    <section class="contact" id="contact">
        <div class="container">
            <div class="section-heading">
                <h1>Contact</h1>
                <h6> Interested? Feel free to contact me! </h6>
            </div>
            <form action="" data-aos="fade-up" data-aos-delay="300">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" placeholder="Insert your name..." required>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Insert your mail address..." required>
                <label for="service">Services:</label>
                <select name="services" id="service">
                    <option value="Option 1">Insert option 1</option>
                    <option value="Option 2">Insert option 2</option>
                    <option value="Option 3">Insert option 3</option>
                </select>
                <label for="subject">Subject:</label>
                <textarea name="subject" id="subject" cols="10" rows="10" placeholder="Art plaats hier je placeholder"></textarea>
                <input type="submit" value="Versturen">
            </form>
        </div>
    </section>

    <footer class="copyright">
        <div class="up" id="up">
            <i class="fas fa-chevron-up"></i>
        </div>
        <p>&copy; 2021 Bramr</p>
    </footer>

</div>